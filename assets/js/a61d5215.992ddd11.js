"use strict";(self.webpackChunktamushpe_guides=self.webpackChunktamushpe_guides||[]).push([[3919],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var r=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:n,className:a},t)}},5064:function(e,t,n){n.d(t,{Z:function(){return u}});var r=n(7294),a=n(9443);var i=function(){var e=(0,r.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=n(6010),l="tabItem_1uMI",s="tabItemActive_2DSg";var u=function(e){var t,n=e.lazy,a=e.block,u=e.defaultValue,c=e.values,p=e.groupId,d=e.className,m=r.Children.toArray(e.children),g=null!=c?c:m.map((function(e){return{value:e.props.value,label:e.props.label}})),f=null!=u?u:null==(t=m.find((function(e){return e.props.default})))?void 0:t.props.value,h=i(),b=h.tabGroupChoices,y=h.setTabGroupChoices,v=(0,r.useState)(f),k=v[0],w=v[1],T=[];if(null!=p){var x=b[p];null!=x&&x!==k&&g.some((function(e){return e.value===x}))&&w(x)}var C=function(e){var t=e.currentTarget,n=T.indexOf(t),r=g[n].value;w(r),null!=p&&(y(p,r),setTimeout((function(){var e,n,r,a,i,o,l,u;(e=t.getBoundingClientRect(),n=e.top,r=e.left,a=e.bottom,i=e.right,o=window,l=o.innerHeight,u=o.innerWidth,n>=0&&i<=u&&a<=l&&r>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},O=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r=T.indexOf(e.target)+1;n=T[r]||T[0];break;case"ArrowLeft":var a=T.indexOf(e.target)-1;n=T[a]||T[T.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},d)},g.map((function(e){var t=e.value,n=e.label;return r.createElement("li",{role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,className:(0,o.Z)("tabs__item",l,{"tabs__item--active":k===t}),key:t,ref:function(e){return T.push(e)},onKeyDown:O,onFocus:C,onClick:C},null!=n?n:t)}))),n?(0,r.cloneElement)(m.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},m.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==k})}))))}},9443:function(e,t,n){var r=(0,n(7294).createContext)(void 0);t.Z=r},1973:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(5064),l=n(8215),s={sidebar_position:2},u="Strings",c={unversionedId:"python/basic-data/strings",id:"python/basic-data/strings",isDocsHomePage:!1,title:"Strings",description:"Strings are one of the most used and popular data types in Python. Strings are a collection of characters that allow us to communicatr information to the user of a program.",source:"@site/docs/python/basic-data/strings.md",sourceDirName:"python/basic-data",slug:"/python/basic-data/strings",permalink:"/docs/python/basic-data/strings",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/python/basic-data/strings.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"pythonSidebar",previous:{title:"Numbers",permalink:"/docs/python/basic-data/numbers"},next:{title:"Booleans",permalink:"/docs/python/basic-data/booleans"}},p=[{value:"Creating Strings",id:"creating-strings",children:[]},{value:"Concatenation",id:"concatenation",children:[]},{value:"String Multiplication",id:"string-multiplication",children:[]},{value:"Multiline Strings",id:"multiline-strings",children:[]}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"strings"},"Strings"),(0,i.kt)("p",null,"Strings are one of the most used and popular data types in Python. Strings are a collection of characters that allow us to communicatr information to the user of a program."),(0,i.kt)("h2",{id:"creating-strings"},"Creating Strings"),(0,i.kt)("p",null,"You can thin of strings as basic English text such as names, words, and sentances. Strings are represented by wrapping text in a single quotes ",(0,i.kt)("inlineCode",{parentName:"p"},"'")," or  double quotes ",(0,i.kt)("inlineCode",{parentName:"p"},'"')," such as ",(0,i.kt)("inlineCode",{parentName:"p"},'"Hello"'),". "),(0,i.kt)("p",null,"Here are some examples:"),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"Code",label:"Code",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"myStringSingle = 'This is a string with single quotes' # String with single quotes\nmyStringDouble = \"This is a string with double quotes\" # String with double quotes\n\nprint(myStringSingle)\nprint(myStringDouble)\n"))),(0,i.kt)(l.Z,{value:"Output",label:"Output",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"This is a string with single quotes\nThis is a string with double quotes\n")))),(0,i.kt)("h2",{id:"concatenation"},"Concatenation"),(0,i.kt)("p",null,'String Concatenation is the process of "adding" strings together. You can achieve this by using the ',(0,i.kt)("inlineCode",{parentName:"p"},"+")," between two Strings. Below is an example to further solidify your understanding. "),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"Code",label:"Code",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# Creates 2 strings and concatenates them\nx = "Erick is"\ny = "a Mechanical Engineer"\nz = x + y\n\n# Prints the new sentence\nprint(z)\n'))),(0,i.kt)(l.Z,{value:"Output",label:"Output",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Erick is a Mechanical Engineer\n")))),(0,i.kt)("h2",{id:"string-multiplication"},"String Multiplication"),(0,i.kt)("p",null,"In Python you can multiply strings by a number using ",(0,i.kt)("inlineCode",{parentName:"p"},"*"),". This operation returns a new string that dublicates the string by the number it's multiplied by.\n",(0,i.kt)("strong",{parentName:"p"},"Example:")),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"Code",label:"Code",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# Creates a string variable\nx = "Example"\n\n# Prints the string multiplied by 3\nprint(x * 3)\n'))),(0,i.kt)(l.Z,{value:"Output",label:"Output",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ExampleExampleExample\n")))),(0,i.kt)("h2",{id:"multiline-strings"},"Multiline Strings"),(0,i.kt)("p",null,"They may be a case where you have a really long string such as a paragraph and want it to span multiple lines in your IDE. You can wrap your text in ",(0,i.kt)("inlineCode",{parentName:"p"},'"""')," or ",(0,i.kt)("inlineCode",{parentName:"p"},"'''")," to creat a multiline string."),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"Code",label:"Code",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'# Creates a multiline string variable\nlongString = """TAMU SHPE Mission Statement: Enhance opportunities \nfor personal and professional growth through social and academic \nresponsibilities while holding true to the Aggie spirit.""" \n\n# Prints the multiline string\nprint(longString)\n'))),(0,i.kt)(l.Z,{value:"Output",label:"Output",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"TAMU SHPE Mission Statement: Enhance opportunities for personal and professional growth through social and academic responsibilities while holding true to the Aggie spirit.\n")))))}m.isMDXComponent=!0},6010:function(e,t,n){function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}function a(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}n.d(t,{Z:function(){return a}})}}]);